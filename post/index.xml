<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Nadhem Jbeli</title>
    <link>https://nadhemjbeli.github.io/portfolio/post/</link>
    <description>Recent content in Projects on Nadhem Jbeli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Oct 2020 12:00:00 -0500</lastBuildDate><atom:link href="https://nadhemjbeli.github.io/portfolio/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project 2: Ball Image Classifier</title>
      <link>https://nadhemjbeli.github.io/portfolio/post/project-2/</link>
      <pubDate>Tue, 10 Nov 2020 11:00:59 -0400</pubDate>
      
      <guid>https://nadhemjbeli.github.io/portfolio/post/project-2/</guid>
      <description>For this example project I built a ball classifier to identify balls from different sports. This could be useful for someone who is new to sports from a certain country. They could take a picture of a ball and an app could serve them some information about the history and rules of the game. This is the underlying model for building something with those capabilities.
I was able to get the model to predict the sport of the ball with 94% accuracy after minimal tuning.</description>
    </item>
    
    <item>
      <title>Project 1: Data Science Salary estimator</title>
      <link>https://nadhemjbeli.github.io/portfolio/post/project-1/</link>
      <pubDate>Mon, 09 Nov 2020 10:58:08 -0400</pubDate>
      
      <guid>https://nadhemjbeli.github.io/portfolio/post/project-1/</guid>
      <description>Created a tool that estimates data science salaries (MAE ~ $ 11K) to help data scientists negotiate their income when they get a job. Scraped over 1000 job descriptions from glassdoor using python and selenium Engineered features from the text of each job description to quantify the value companies put on python, excel, aws, and spark. Optimized Linear, Lasso, and Random Forest Regressors using GridsearchCV to reach the best model.</description>
    </item>
    
  </channel>
</rss>
